{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/rootReducer.js","redux/store.js","utils/notifications.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Loader/Loader.js","App.js","index.js","components/ContactList/ContactList.module.scss","components/Form/Form.module.scss","components/Filter/Filter.module.scss","components/Loader/Loader.module.scss"],"names":["actions","onFetchContactsRequest","createAction","onFetchContactsSuccess","onFetchContactsFailure","onAddContactRequest","onAddContactSuccess","onAddContactFailure","onDeleteContactRequest","onDeleteContactSuccess","onDeleteContactFailure","onToggleFavouriteRequest","onToggleFavouriteSuccess","onToggleFavouriteFailure","onChangeFilter","phonebookState","contacts","createReducer","phonebookActions","state","payload","type","filter","id","map","contact","loading","combineReducers","rootReducer","phonebook","persistConfig","key","storage","persistedReducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","persistor","persistStore","connectionErrorValidation","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","axios","defaults","baseURL","operations","fetchContactOperation","dispatch","get","then","data","catch","addContactOperation","favourite","post","deleteContactOperation","delete","toggleContactFavourite","update","patch","contactsSelector","filterSelector","selectors","isLoadingSelector","contactsReselect","createSelector","filteredContactsSelector","normalizeFilter","toLowerCase","name","includes","number","Form","useSelector","phonebookSelectors","useDispatch","useState","setContact","handleInputChange","event","target","value","charAt","toUpperCase","slice","formSubmitHandler","testName","test","testNumber","some","warn","contactDuplicateValidation","phonebookOperations","className","contact_form","noValidate","autoComplete","onSubmit","preventDefault","Input","placeholder","form_input","inputProps","onChange","required","variant","Button","Filter","filter_input","ContactList","useEffect","length","contact_list","contact_item","contact_text","button_group","onClick","handleDeleteContact","color","style","green","Loader","height","width","timeout","loader","App","isLoading","contactsLength","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a3adc345.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// FETCH CONTACTS\nconst onFetchContactsRequest = createAction('phonebook/FETCH_CONTACTS_R');\nconst onFetchContactsSuccess = createAction('phonebook/FETCH_CONTACTS_S');\nconst onFetchContactsFailure = createAction('phonebook/FETCH_CONTACTS_F');\n\n// ADD\nconst onAddContactRequest = createAction('phonebook/ADD_CONTACT_R');\nconst onAddContactSuccess = createAction('phonebook/ADD_CONTACT_S');\nconst onAddContactFailure = createAction('phonebook/ADD_CONTACT_F');\n\n// DELETE\nconst onDeleteContactRequest = createAction('phonebook/DELETE_CONTACT_R');\nconst onDeleteContactSuccess = createAction('phonebook/DELETE_CONTACT_S');\nconst onDeleteContactFailure = createAction('phonebook/DELETE_CONTACT_F');\n\n// TOGGLE\nconst onToggleFavouriteRequest = createAction('phonebook/TOGGLE_FAVOURITE_R');\nconst onToggleFavouriteSuccess = createAction('phonebook/TOGGLE_FAVOURITE_S');\nconst onToggleFavouriteFailure = createAction('phonebook/TOGGLE_FAVOURITE_F');\n\n// FILTER\nconst onChangeFilter = createAction('phonebook/FILTER_CONTACT');\n\nconst actions = {\n  onFetchContactsRequest,\n  onFetchContactsSuccess,\n  onFetchContactsFailure,\n  onAddContactRequest,\n  onAddContactSuccess,\n  onAddContactFailure,\n  onDeleteContactRequest,\n  onDeleteContactSuccess,\n  onDeleteContactFailure,\n  onToggleFavouriteRequest,\n  onToggleFavouriteSuccess,\n  onToggleFavouriteFailure,\n  onChangeFilter,\n};\n\nexport default actions;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport phonebookActions from './phonebook-actions';\n\nconst phonebookState = {\n  items: [],\n  filter: '',\n  loading: false,\n};\n\nconst contacts = createReducer(phonebookState.items, {\n  // FETCH\n  [phonebookActions.onFetchContactsSuccess]: (state, { payload }) => payload,\n  // ADD\n  [phonebookActions.onAddContactSuccess]: (state, { type, payload }) => [\n    ...state,\n    payload,\n  ],\n  // DELETE\n  [phonebookActions.onDeleteContactSuccess]: (state, { type, payload }) =>\n    state.filter(({ id }) => id !== payload),\n  // TOGGLE\n  [phonebookActions.onToggleFavouriteSuccess]: (state, { type, payload }) =>\n    state.map(contact => {\n      return contact.id === payload.id ? payload : contact;\n    }),\n});\n\nconst loading = createReducer(phonebookState.loading, {\n  [phonebookActions.onAddContactRequest]: () => true,\n  [phonebookActions.onAddContactSuccess]: () => false,\n  [phonebookActions.onAddContactFailure]: () => false,\n  [phonebookActions.onDeleteContactRequest]: () => true,\n  [phonebookActions.onDeleteContactSuccess]: () => false,\n  [phonebookActions.onDeleteContactFailure]: () => false,\n  [phonebookActions.onToggleFavouriteRequest]: () => true,\n  [phonebookActions.onToggleFavouriteSuccess]: () => false,\n  [phonebookActions.onToggleFavouriteFailure]: () => false,\n  [phonebookActions.onFetchContactsRequest]: () => true,\n  [phonebookActions.onFetchContactsSuccess]: () => false,\n  [phonebookActions.onFetchContactsFailure]: () => false,\n});\n\nconst filter = createReducer(phonebookState.filter, {\n  [phonebookActions.onChangeFilter]: (state, { type, payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { combineReducers } from 'redux';\nimport phonebook from './phonebook/phonebook-reducer';\n\nconst rootReducer = combineReducers({\n  phonebook,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport logger from 'redux-logger';\n\nimport rootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'react_phonebook',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: middleware,\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const contactDuplicateValidation = name =>\n  toast.warn(`${name} is already in contacts!`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const nameInputValidation = () =>\n  toast.error(\n    'The name can only consist of letters, apostrophes, dashes and spaces.',\n    {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    },\n  );\n\nexport const numberInputValidation = () =>\n  toast.error(\n    'The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +',\n    {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    },\n  );\n\nexport const connectionErrorValidation = message =>\n  toast.error(`${message}`, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n","import axios from 'axios';\nimport phonebookActions from './phonebook-actions';\n\nimport { connectionErrorValidation } from '../../utils/notifications';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\n// FETCH CONTACTS\nconst fetchContactOperation = payload => dispatch => {\n  dispatch(phonebookActions.onFetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(phonebookActions.onFetchContactsSuccess(data)))\n    .catch(error => {\n      connectionErrorValidation(error.message);\n      dispatch(phonebookActions.onFetchContactsFailure(error));\n    });\n};\n\n// ADD\nconst addContactOperation = payload => dispatch => {\n  const contact = {\n    ...payload,\n    favourite: false,\n  };\n\n  dispatch(phonebookActions.onAddContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(phonebookActions.onAddContactSuccess(data)))\n    .catch(error => {\n      connectionErrorValidation(error.message);\n      dispatch(phonebookActions.onAddContactFailure(error));\n    });\n};\n\n// DELETE\nconst deleteContactOperation = id => dispatch => {\n  dispatch(phonebookActions.onDeleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(phonebookActions.onDeleteContactSuccess(id)))\n    .catch(error => {\n      connectionErrorValidation(error.message);\n      dispatch(phonebookActions.onDeleteContactFailure(error));\n    });\n};\n\n// TOGGLE\nconst toggleContactFavourite = ({ id, favourite }) => dispatch => {\n  dispatch(phonebookActions.onToggleFavouriteRequest());\n\n  const update = { favourite };\n\n  axios\n    .patch(`/contacts/${id}`, update)\n    .then(({ data }) =>\n      dispatch(phonebookActions.onToggleFavouriteSuccess(data)),\n    )\n    .catch(error => {\n      connectionErrorValidation(error.message);\n      dispatch(phonebookActions.onToggleFavouriteFailure(error));\n    });\n};\n\nconst operations = {\n  fetchContactOperation,\n  addContactOperation,\n  deleteContactOperation,\n  toggleContactFavourite,\n};\n\nexport default operations;\n","import { createSelector } from 'reselect';\n\n// SELECTORS\n\nconst contactsSelector = state => state.phonebook.contacts;\n\nconst filterSelector = state => state.phonebook.filter;\n\nconst isLoadingSelector = state => state.phonebook.loading;\n\n// RESELECT\n\nconst contactsReselect = createSelector(contactsSelector, contacts => contacts);\n\nconst filteredContactsSelector = createSelector(\n  [contactsSelector, filterSelector],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizeFilter) ||\n        contact.number.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n\nconst selectors = {\n  contactsSelector,\n  filterSelector,\n  isLoadingSelector,\n  contactsReselect,\n  filteredContactsSelector,\n};\n\nexport default selectors;\n","// import shortid from \"shortid\";\nimport { useState } from 'react';\nimport { form_input, contact_form } from './Form.module.scss';\n\n// Meterial\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\n// Toastyfy\nimport { ToastContainer } from 'react-toastify';\nimport {\n  nameInputValidation,\n  numberInputValidation,\n  contactDuplicateValidation,\n} from '../../utils/notifications';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\nconst Form = () => {\n  const contacts = useSelector(phonebookSelectors.contactsReselect);\n  const dispatch = useDispatch();\n\n  const [contact, setContact] = useState({\n    name: '',\n    number: '+380',\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    setContact({\n      ...contact,\n      [name]: value.charAt(0).toUpperCase() + value.slice(1),\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    formSubmitHandler(contact);\n  };\n\n  const reset = () => {\n    setContact({\n      name: '',\n      number: '+380',\n    });\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    const testName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/.test(\n      name,\n    );\n\n    const testNumber = /(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})/.test(\n      number,\n    );\n\n    if (contacts.some(contact => contact.name === name)) {\n      contactDuplicateValidation(name);\n    } else if (testName !== true) {\n      nameInputValidation();\n    } else if (testNumber !== true) {\n      numberInputValidation();\n    } else {\n      dispatch(phonebookOperations.addContactOperation({ name, number }));\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className={contact_form}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          placeholder=\"Name\"\n          className={form_input}\n          inputProps={{ 'aria-label': 'contact name' }}\n          type=\"text\"\n          onChange={handleInputChange}\n          name=\"name\"\n          value={contact.name}\n          id=\"name\"\n          required\n          variant=\"outlined\"\n        />\n        <Input\n          placeholder=\"Number\"\n          className={form_input}\n          inputProps={{ 'aria-label': 'contact number' }}\n          type=\"tel\"\n          onChange={handleInputChange}\n          name=\"number\"\n          value={contact.number}\n          id=\"number\"\n          required\n        />\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Form;\n","import { filter_input } from './Filter.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\n// Material\nimport Input from '@material-ui/core/Input';\n\nconst Filter = () => {\n  const filter = useSelector(phonebookSelectors.filterSelector);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    return dispatch(phonebookActions.onChangeFilter(event.target.value));\n  };\n  return (\n    <div>\n      <Input\n        type=\"text\"\n        placeholder=\"Search contact\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleInputChange}\n        className={filter_input}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\n\nimport {\n  contact_item,\n  contact_text,\n  button_group,\n  contact_list,\n} from './ContactList.module.scss';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\n// Material\nimport Button from '@material-ui/core/Button';\nimport BackspaceTwoToneIcon from '@material-ui/icons/BackspaceTwoTone';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { green } from '@material-ui/core/colors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(phonebookSelectors.filteredContactsSelector);\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContactOperation());\n    // eslint-disable-next-line\n  }, []);\n\n  // const filteredContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(\n  //     ({ name, number }) =>\n  //       name.toLowerCase().includes(normalizedFilter) ||\n  //       number.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n\n  const handleDeleteContact = id => {\n    return dispatch(phonebookOperations.deleteContactOperation(id));\n  };\n\n  const handleToggleFavourite = update => {\n    return dispatch(phonebookOperations.toggleContactFavourite(update));\n  };\n\n  return (\n    <>\n      {contacts.length ? (\n        <ol className={contact_list}>\n          {contacts.map(({ name, number, id, favourite }) => {\n            return (\n              <li key={name} className={contact_item}>\n                <p className={contact_text}>\n                  <span>{name}</span>\n                  <span>{number}</span>\n                </p>\n                <div className={button_group}>\n                  <Button\n                    className=\"delete-button\"\n                    onClick={() => handleDeleteContact(id)}\n                  >\n                    <BackspaceTwoToneIcon color=\"disabled\" />\n                  </Button>\n\n                  <Button\n                    className=\"favourite-button\"\n                    onClick={() =>\n                      handleToggleFavourite({ id, favourite: !favourite })\n                    }\n                  >\n                    {favourite ? (\n                      <BookmarkIcon style={{ color: green[500] }} />\n                    ) : (\n                      <BookmarkBorderIcon color=\"disabled\" />\n                    )}\n                  </Button>\n                </div>\n              </li>\n            );\n          })}\n        </ol>\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import Spinner from 'react-loader-spinner';\nimport { loader } from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Spinner\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={150}\n        width={150}\n        timeout={3000}\n        className={loader}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\n// Comp\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Loader from './components/Loader';\n\n// REDUX\nimport { useSelector } from 'react-redux';\nimport phonebookSelectors from './redux/phonebook/phonebook-selectors';\n\nconst App = () => {\n  const isLoading = useSelector(phonebookSelectors.isLoadingSelector);\n  const contactsLength = useSelector(phonebookSelectors.contactsSelector)\n    .length;\n\n  return (\n    <div className=\"container\">\n      {isLoading && <Loader />}\n      <div style={isLoading ? { filter: 'blur(20px)' } : null}>\n        <h1>Phonebook</h1>\n        <Form />\n        {contactsLength > 0 && (\n          <>\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// Comp\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__CJczP\",\"contact_item\":\"ContactList_contact_item__xXGrq\",\"contact_text\":\"ContactList_contact_text__1N-2B\",\"button_group\":\"ContactList_button_group__TSjFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"Form_contact_form__2kgVi\",\"form_input\":\"Form_form_input__3p7qB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__19JVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2hZcM\"};"],"sourceRoot":""}