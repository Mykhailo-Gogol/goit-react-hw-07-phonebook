{"version":3,"sources":["redux/phonebook/actions.js","redux/phonebook/reducer.js","redux/rootReducer.js","redux/store.js","redux/phonebook/operations.js","redux/phonebook/reselect.js","components/Form/Form.js","utils/notifications.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Loader/Loader.js","App.js","index.js","components/ContactList/ContactList.module.scss","components/Form/Form.module.scss","components/Filter/Filter.module.scss","components/Loader/Loader.module.scss"],"names":["onFetchContactsRequest","createAction","onFetchContactsSuccess","onFetchContactsFailure","onAddContactRequest","onAddContactSuccess","onAddContactFailure","onDeleteContactRequest","onDeleteContactSuccess","onDeleteContactFailure","onToggleFavouriteRequest","onToggleFavouriteSuccess","onToggleFavouriteFailure","onChangeFilter","phonebookState","contacts","createReducer","state","payload","type","filter","id","map","contact","loading","combineReducers","rootReducer","phonebook","persistConfig","key","storage","persistedReducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","persistor","persistStore","axios","defaults","baseURL","contactsSelector","filterSelector","contactsReselect","createSelector","filteredContactsSelector","normalizeFilter","toLowerCase","name","includes","number","Form","useSelector","dispatch","useDispatch","useState","setContact","handleInputChange","event","target","value","charAt","toUpperCase","slice","formSubmitHandler","testName","test","testNumber","some","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","contactDuplicateValidation","error","favourite","post","then","data","catch","className","contact_form","noValidate","autoComplete","onSubmit","preventDefault","Input","placeholder","form_input","inputProps","onChange","required","variant","Button","Filter","filter_input","ContactList","useEffect","get","handleDeleteContact","delete","deleteContactOperation","handleToggleFavourite","update","patch","toggleContactFavourite","length","contact_list","contact_item","contact_text","button_group","onClick","color","style","green","Loader","height","width","timeout","loader","App","isLoading","isLoadingSelector","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2dcff70f.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\n// FETCH CONTACTS\nexport const onFetchContactsRequest = createAction(\n  \"phonebook/FETCH_CONTACTS_R\"\n);\nexport const onFetchContactsSuccess = createAction(\n  \"phonebook/FETCH_CONTACTS_S\"\n);\nexport const onFetchContactsFailure = createAction(\n  \"phonebook/FETCH_CONTACTS_F\"\n);\n\n// ADD\nexport const onAddContactRequest = createAction(\"phonebook/ADD_CONTACT_R\");\nexport const onAddContactSuccess = createAction(\"phonebook/ADD_CONTACT_S\");\nexport const onAddContactFailure = createAction(\"phonebook/ADD_CONTACT_F\");\n\n// DELETE\nexport const onDeleteContactRequest = createAction(\n  \"phonebook/DELETE_CONTACT_R\"\n);\nexport const onDeleteContactSuccess = createAction(\n  \"phonebook/DELETE_CONTACT_S\"\n);\nexport const onDeleteContactFailure = createAction(\n  \"phonebook/DELETE_CONTACT_F\"\n);\n\n// TOGGLE\nexport const onToggleFavouriteRequest = createAction(\n  \"phonebook/TOGGLE_FAVOURITE_R\"\n);\nexport const onToggleFavouriteSuccess = createAction(\n  \"phonebook/TOGGLE_FAVOURITE_S\"\n);\nexport const onToggleFavouriteFailure = createAction(\n  \"phonebook/TOGGLE_FAVOURITE_F\"\n);\n\n// FILTER\nexport const onChangeFilter = createAction(\"phonebook/FILTER_CONTACT\");\n\n\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  onAddContactRequest,\n  onAddContactSuccess,\n  onAddContactFailure,\n  onDeleteContactRequest,\n  onDeleteContactSuccess,\n  onDeleteContactFailure,\n  onToggleFavouriteRequest,\n  onToggleFavouriteSuccess,\n  onToggleFavouriteFailure,\n  onChangeFilter,\n  onFetchContactsRequest,\n  onFetchContactsSuccess,\n  onFetchContactsFailure,\n} from './actions';\n\nconst phonebookState = {\n  items: [],\n  filter: '',\n  loading: false,\n};\n\nconst contacts = createReducer(phonebookState.items, {\n  // FETCH\n  [onFetchContactsSuccess]: (state, { payload }) => payload,\n  // ADD\n  [onAddContactSuccess]: (state, { type, payload }) => [...state, payload],\n  // DELETE\n  [onDeleteContactSuccess]: (state, { type, payload }) =>\n    state.filter(({ id }) => id !== payload),\n  // TOGGLE\n  [onToggleFavouriteSuccess]: (state, { type, payload }) =>\n    state.map(contact => {\n      return contact.id === payload.id ? payload : contact;\n    }),\n});\n\nconst loading = createReducer(phonebookState.loading, {\n  [onAddContactRequest]: () => true,\n  [onAddContactSuccess]: () => false,\n  [onAddContactFailure]: () => false,\n  [onDeleteContactRequest]: () => true,\n  [onDeleteContactSuccess]: () => false,\n  [onDeleteContactFailure]: () => false,\n  [onToggleFavouriteRequest]: () => true,\n  [onToggleFavouriteSuccess]: () => false,\n  [onToggleFavouriteFailure]: () => false,\n  [onFetchContactsRequest]: () => true,\n  [onFetchContactsSuccess]: () => false,\n  [onFetchContactsFailure]: () => false,\n});\n\nconst filter = createReducer(phonebookState.filter, {\n  [onChangeFilter]: (state, { type, payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { combineReducers } from \"redux\";\nimport phonebook from \"./phonebook/reducer\";\n\nconst rootReducer = combineReducers({\n  phonebook,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport logger from 'redux-logger';\n\nimport rootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'react_phonebook',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: middleware,\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\n","import axios from 'axios';\nimport {\n  onAddContactRequest,\n  onAddContactSuccess,\n  onAddContactFailure,\n  onDeleteContactRequest,\n  onDeleteContactSuccess,\n  onDeleteContactFailure,\n  onToggleFavouriteRequest,\n  onToggleFavouriteSuccess,\n  onToggleFavouriteFailure,\n  onFetchContactsRequest,\n  onFetchContactsSuccess,\n  onFetchContactsFailure,\n} from './actions';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\n// FETCH CONTACTS\nexport const fetchContactOperation = payload => dispatch => {\n  dispatch(onFetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(onFetchContactsSuccess(data)))\n    .catch(error => dispatch(onFetchContactsFailure(error)));\n};\n\n// ADD\nexport const addContactOperation = payload => dispatch => {\n  const contact = {\n    ...payload,\n    favourite: false,\n  };\n\n  dispatch(onAddContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(onAddContactSuccess(data)))\n    .catch(error => dispatch(onAddContactFailure(error)));\n};\n\n// DELETE\nexport const deleteContactOperation = id => dispatch => {\n  dispatch(onDeleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(onDeleteContactSuccess(id)))\n    .catch(error => dispatch(onDeleteContactFailure(error)));\n};\n\n// TOGGLE\nexport const toggleContactFavourite = ({ id, favourite }) => dispatch => {\n  dispatch(onToggleFavouriteRequest());\n\n  const update = { favourite };\n\n  axios\n    .patch(`/contacts/${id}`, update)\n    .then(({ data }) => dispatch(onToggleFavouriteSuccess(data)))\n    .catch(error => dispatch(onToggleFavouriteFailure(error)));\n};\n","import { createSelector } from 'reselect';\n\nexport const contactsSelector = state => state.phonebook.contacts;\n\nexport const filterSelector = state => state.phonebook.filter;\n\nexport const isLoadingSelector = state => state.phonebook.loading;\n\n// RESELECT\n\nexport const contactsReselect = createSelector(\n  contactsSelector,\n  contacts => contacts,\n);\n\n\nexport const filteredContactsSelector = createSelector(\n  [contactsSelector, filterSelector],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizeFilter) ||\n        contact.number.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n","// import shortid from \"shortid\";\nimport { useState } from 'react';\nimport { form_input, contact_form } from './Form.module.scss';\n\n// Meterial\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\n// Toastyfy\nimport { ToastContainer } from 'react-toastify';\nimport {\n  nameInputValidation,\n  numberInputValidation,\n  contactDuplicateValidation,\n} from '../../utils/notifications';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContactOperation } from '../../redux/phonebook/operations';\nimport { contactsReselect } from '../../redux/phonebook/reselect';\n\nconst Form = () => {\n  const contacts = useSelector(contactsReselect);\n  const dispatch = useDispatch();\n\n  const [contact, setContact] = useState({\n    name: '',\n    number: '+380',\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    setContact({\n      ...contact,\n      [name]: value.charAt(0).toUpperCase() + value.slice(1),\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    formSubmitHandler(contact);\n  };\n\n  const reset = () => {\n    setContact({\n      name: '',\n      number: '+380',\n    });\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    const testName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/.test(\n      name,\n    );\n\n    const testNumber = /(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})/.test(\n      number,\n    );\n\n    if (contacts.some(contact => contact.name === name)) {\n      contactDuplicateValidation(name);\n    } else if (testName !== true) {\n      nameInputValidation();\n    } else if (testNumber !== true) {\n      numberInputValidation();\n    } else {\n      dispatch(addContactOperation({ name, number }));\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className={contact_form}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          placeholder=\"Name\"\n          className={form_input}\n          inputProps={{ 'aria-label': 'contact name' }}\n          type=\"text\"\n          onChange={handleInputChange}\n          name=\"name\"\n          value={contact.name}\n          id=\"name\"\n          required\n          variant=\"outlined\"\n        />\n        <Input\n          placeholder=\"Number\"\n          className={form_input}\n          inputProps={{ 'aria-label': 'contact number' }}\n          type=\"tel\"\n          onChange={handleInputChange}\n          name=\"number\"\n          value={contact.number}\n          id=\"number\"\n          required\n        />\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Form;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const contactDuplicateValidation = name =>\n  toast.warn(`${name} is already in contacts!`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const nameInputValidation = () =>\n  toast.error(\n    'The name can only consist of letters, apostrophes, dashes and spaces.',\n    {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    },\n  );\n\nexport const numberInputValidation = () =>\n  toast.error(\n    'The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +',\n    {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    },\n  );\n\n// export const connectionErrorValidation = () =>\n//   toast.error('The server is currently disabled', {\n//     position: 'top-right',\n//     autoClose: 5000,\n//     hideProgressBar: false,\n//     closeOnClick: true,\n//     pauseOnHover: true,\n//     draggable: true,\n//     progress: undefined,\n//   });\n","import { filter_input } from './Filter.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onChangeFilter } from '../../redux/phonebook/actions';\nimport { filterSelector } from '../../redux/phonebook/reselect';\n\n// Material\nimport Input from '@material-ui/core/Input';\n\nconst Filter = () => {\n  const filter = useSelector(filterSelector);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    return dispatch(onChangeFilter(event.target.value));\n  };\n  return (\n    <div>\n      <Input\n        type=\"text\"\n        placeholder=\"Search contact\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleInputChange}\n        className={filter_input}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\n\nimport {\n  contact_item,\n  contact_text,\n  button_group,\n  contact_list,\n} from './ContactList.module.scss';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContactOperation,\n  deleteContactOperation,\n  toggleContactFavourite,\n} from '../../redux/phonebook/operations';\nimport { filteredContactsSelector } from '../../redux/phonebook/reselect';\n\n// Material\nimport Button from '@material-ui/core/Button';\nimport BackspaceTwoToneIcon from '@material-ui/icons/BackspaceTwoTone';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { green } from '@material-ui/core/colors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filteredContactsSelector);\n\n  useEffect(() => {\n    dispatch(fetchContactOperation());\n    // eslint-disable-next-line\n  }, []);\n\n  // const filteredContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(\n  //     ({ name, number }) =>\n  //       name.toLowerCase().includes(normalizedFilter) ||\n  //       number.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n\n  const handleDeleteContact = id => {\n    return dispatch(deleteContactOperation(id));\n  };\n\n  const handleToggleFavourite = update => {\n    return dispatch(toggleContactFavourite(update));\n  };\n\n  return (\n    <>\n      {contacts.length ? (\n        <ol className={contact_list}>\n          {contacts.map(({ name, number, id, favourite }) => {\n            return (\n              <li key={name} className={contact_item}>\n                <p className={contact_text}>\n                  <span>{name}</span>\n                  <span>{number}</span>\n                </p>\n                <div className={button_group}>\n                  <Button\n                    className=\"delete-button\"\n                    onClick={() => handleDeleteContact(id)}\n                  >\n                    <BackspaceTwoToneIcon color=\"disabled\" />\n                  </Button>\n\n                  <Button\n                    className=\"favourite-button\"\n                    onClick={() =>\n                      handleToggleFavourite({ id, favourite: !favourite })\n                    }\n                  >\n                    {favourite ? (\n                      <BookmarkIcon style={{ color: green[500] }} />\n                    ) : (\n                      <BookmarkBorderIcon color=\"disabled\" />\n                    )}\n                  </Button>\n                </div>\n              </li>\n            );\n          })}\n        </ol>\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import Spinner from 'react-loader-spinner';\nimport { loader } from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Spinner\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={150}\n        width={150}\n        timeout={3000}\n        className={loader}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\n// Comp\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Loader from './components/Loader';\n\n// REDUX\nimport { useSelector } from 'react-redux';\nimport { isLoadingSelector } from './redux/phonebook/reselect';\n\nconst App = () => {\n  const isLoading = useSelector(state => isLoadingSelector(state));\n  return (\n    <div className=\"container\">\n      {isLoading && <Loader />}\n      <div style={isLoading ? { filter: 'blur(20px)' } : null}>\n        <h1>Phonebook</h1>\n        <Form className=\"form\" />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// Comp\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__CJczP\",\"contact_item\":\"ContactList_contact_item__xXGrq\",\"contact_text\":\"ContactList_contact_text__1N-2B\",\"button_group\":\"ContactList_button_group__TSjFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"Form_contact_form__2kgVi\",\"form_input\":\"Form_form_input__3p7qB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__19JVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2hZcM\"};"],"sourceRoot":""}